//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/KMInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KMInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KMInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KMInput"",
    ""maps"": [
        {
            ""name"": ""Car"",
            ""id"": ""a2ffbc6a-ef32-45a3-97e7-391645d415a6"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""933a1ec6-3320-44bb-98f6-e463010e0e32"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Altitude"",
                    ""type"": ""Value"",
                    ""id"": ""a19ab24f-6a63-4c90-afea-2ac21bfbb083"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sail"",
                    ""type"": ""PassThrough"",
                    ""id"": ""542a0c4f-7351-4556-8a60-2c0811c3ca97"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LateralBrakes"",
                    ""type"": ""Value"",
                    ""id"": ""8db08609-88aa-4439-9868-53cf92189a1a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""e5b06390-5614-42b3-a0d4-fc0b75ce9dd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""7fc849d6-2854-4ecb-bbea-eeda4d46c843"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dismount"",
                    ""type"": ""Button"",
                    ""id"": ""564c28e7-12f2-4794-9c73-c87932b30fda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""24c7e322-705e-4c5c-8331-5566af9f6713"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dff7ac36-e3d4-4dfd-9fed-2d55176da11f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""829c2dac-c01e-4ace-a834-ee0eb3722401"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a7819034-6017-4380-9936-8abf08a1b438"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2696a7f4-79fb-48f7-9d09-0dd3781c203d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e75e54f5-0ed0-4219-8c3e-e5dedb2e9d60"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Altitude"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""de8d6165-a198-4245-92a2-02bd221503f2"",
                    ""path"": ""<DualShockGamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Altitude"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8b2f2a8d-452d-41b5-96f9-f80b7300569f"",
                    ""path"": ""<DualShockGamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Altitude"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f6bbd6e8-756f-4753-8d19-98bf0d25e538"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sail"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""08af0227-b08f-4824-a1b7-566b364d13ab"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sail"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b4dc2be8-4a84-4985-b732-7c0dfc65cbda"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sail"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""4c43d832-1f7d-4ded-b65a-5fe8f42acb2f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LateralBrakes"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1a9f92c2-0a59-4394-a4e7-f396e4b2f07f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LateralBrakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c3e070f1-7595-4640-bca8-41890e8f5c7d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LateralBrakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3f4691d3-c3e9-48ac-a345-868531ee1894"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1402b42-27af-49c8-92d2-5412e0acbdf0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77ed1724-817b-42ed-9f42-ca5032264a80"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dismount"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Foot"",
            ""id"": ""0b4ecc71-e914-4a00-b92b-6c5700e11ea5"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""9cdab8c4-0a60-42ee-a6fa-cc4ed6f7ddb2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""08ad47c7-b69e-41b7-a938-4f2e98e70e57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d0fd6440-a1d2-4569-a789-998016a1886e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Action"",
                    ""type"": ""Button"",
                    ""id"": ""306302f9-5521-4fe6-a49c-4da35248d9ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""f148be16-8b96-4f4b-902f-b52b4b450bb1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""6c69dd6a-9d57-4ca3-9a62-597021f29b7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c6d90613-0d9b-4b70-bf04-4c60f66d8085"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0ddd481b-4833-4da4-a055-fea92fc1766b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ea555233-8141-4a96-ade9-abdec11d73d9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""118ea3ac-c237-4121-891a-ae8cfe5709d4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a0a4cbdb-a0ec-4b82-98c9-79123d8914f6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b04cbe2a-dba0-4197-b4c1-2726a822f6ac"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61c2d263-7d7c-4829-ba49-ea477063e583"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48dfd51f-3b01-478d-bc89-603532e8e2aa"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e95acf07-fbf2-47dd-acfa-efbda9c1ccea"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6c192f8-f462-48cc-b30b-b9910e8aec98"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Car
        m_Car = asset.FindActionMap("Car", throwIfNotFound: true);
        m_Car_Move = m_Car.FindAction("Move", throwIfNotFound: true);
        m_Car_Altitude = m_Car.FindAction("Altitude", throwIfNotFound: true);
        m_Car_Sail = m_Car.FindAction("Sail", throwIfNotFound: true);
        m_Car_LateralBrakes = m_Car.FindAction("LateralBrakes", throwIfNotFound: true);
        m_Car_Aim = m_Car.FindAction("Aim", throwIfNotFound: true);
        m_Car_Shoot = m_Car.FindAction("Shoot", throwIfNotFound: true);
        m_Car_Dismount = m_Car.FindAction("Dismount", throwIfNotFound: true);
        // Foot
        m_Foot = asset.FindActionMap("Foot", throwIfNotFound: true);
        m_Foot_Walk = m_Foot.FindAction("Walk", throwIfNotFound: true);
        m_Foot_Sprint = m_Foot.FindAction("Sprint", throwIfNotFound: true);
        m_Foot_Jump = m_Foot.FindAction("Jump", throwIfNotFound: true);
        m_Foot_Action = m_Foot.FindAction("Action", throwIfNotFound: true);
        m_Foot_Aim = m_Foot.FindAction("Aim", throwIfNotFound: true);
        m_Foot_Shoot = m_Foot.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Car
    private readonly InputActionMap m_Car;
    private ICarActions m_CarActionsCallbackInterface;
    private readonly InputAction m_Car_Move;
    private readonly InputAction m_Car_Altitude;
    private readonly InputAction m_Car_Sail;
    private readonly InputAction m_Car_LateralBrakes;
    private readonly InputAction m_Car_Aim;
    private readonly InputAction m_Car_Shoot;
    private readonly InputAction m_Car_Dismount;
    public struct CarActions
    {
        private @KMInput m_Wrapper;
        public CarActions(@KMInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Car_Move;
        public InputAction @Altitude => m_Wrapper.m_Car_Altitude;
        public InputAction @Sail => m_Wrapper.m_Car_Sail;
        public InputAction @LateralBrakes => m_Wrapper.m_Car_LateralBrakes;
        public InputAction @Aim => m_Wrapper.m_Car_Aim;
        public InputAction @Shoot => m_Wrapper.m_Car_Shoot;
        public InputAction @Dismount => m_Wrapper.m_Car_Dismount;
        public InputActionMap Get() { return m_Wrapper.m_Car; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CarActions set) { return set.Get(); }
        public void SetCallbacks(ICarActions instance)
        {
            if (m_Wrapper.m_CarActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CarActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnMove;
                @Altitude.started -= m_Wrapper.m_CarActionsCallbackInterface.OnAltitude;
                @Altitude.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnAltitude;
                @Altitude.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnAltitude;
                @Sail.started -= m_Wrapper.m_CarActionsCallbackInterface.OnSail;
                @Sail.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnSail;
                @Sail.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnSail;
                @LateralBrakes.started -= m_Wrapper.m_CarActionsCallbackInterface.OnLateralBrakes;
                @LateralBrakes.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnLateralBrakes;
                @LateralBrakes.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnLateralBrakes;
                @Aim.started -= m_Wrapper.m_CarActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnAim;
                @Shoot.started -= m_Wrapper.m_CarActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnShoot;
                @Dismount.started -= m_Wrapper.m_CarActionsCallbackInterface.OnDismount;
                @Dismount.performed -= m_Wrapper.m_CarActionsCallbackInterface.OnDismount;
                @Dismount.canceled -= m_Wrapper.m_CarActionsCallbackInterface.OnDismount;
            }
            m_Wrapper.m_CarActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Altitude.started += instance.OnAltitude;
                @Altitude.performed += instance.OnAltitude;
                @Altitude.canceled += instance.OnAltitude;
                @Sail.started += instance.OnSail;
                @Sail.performed += instance.OnSail;
                @Sail.canceled += instance.OnSail;
                @LateralBrakes.started += instance.OnLateralBrakes;
                @LateralBrakes.performed += instance.OnLateralBrakes;
                @LateralBrakes.canceled += instance.OnLateralBrakes;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Dismount.started += instance.OnDismount;
                @Dismount.performed += instance.OnDismount;
                @Dismount.canceled += instance.OnDismount;
            }
        }
    }
    public CarActions @Car => new CarActions(this);

    // Foot
    private readonly InputActionMap m_Foot;
    private IFootActions m_FootActionsCallbackInterface;
    private readonly InputAction m_Foot_Walk;
    private readonly InputAction m_Foot_Sprint;
    private readonly InputAction m_Foot_Jump;
    private readonly InputAction m_Foot_Action;
    private readonly InputAction m_Foot_Aim;
    private readonly InputAction m_Foot_Shoot;
    public struct FootActions
    {
        private @KMInput m_Wrapper;
        public FootActions(@KMInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_Foot_Walk;
        public InputAction @Sprint => m_Wrapper.m_Foot_Sprint;
        public InputAction @Jump => m_Wrapper.m_Foot_Jump;
        public InputAction @Action => m_Wrapper.m_Foot_Action;
        public InputAction @Aim => m_Wrapper.m_Foot_Aim;
        public InputAction @Shoot => m_Wrapper.m_Foot_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Foot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FootActions set) { return set.Get(); }
        public void SetCallbacks(IFootActions instance)
        {
            if (m_Wrapper.m_FootActionsCallbackInterface != null)
            {
                @Walk.started -= m_Wrapper.m_FootActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_FootActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_FootActionsCallbackInterface.OnWalk;
                @Sprint.started -= m_Wrapper.m_FootActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_FootActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_FootActionsCallbackInterface.OnSprint;
                @Jump.started -= m_Wrapper.m_FootActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FootActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FootActionsCallbackInterface.OnJump;
                @Action.started -= m_Wrapper.m_FootActionsCallbackInterface.OnAction;
                @Action.performed -= m_Wrapper.m_FootActionsCallbackInterface.OnAction;
                @Action.canceled -= m_Wrapper.m_FootActionsCallbackInterface.OnAction;
                @Aim.started -= m_Wrapper.m_FootActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_FootActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_FootActionsCallbackInterface.OnAim;
                @Shoot.started -= m_Wrapper.m_FootActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_FootActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_FootActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_FootActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Action.started += instance.OnAction;
                @Action.performed += instance.OnAction;
                @Action.canceled += instance.OnAction;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public FootActions @Foot => new FootActions(this);
    public interface ICarActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAltitude(InputAction.CallbackContext context);
        void OnSail(InputAction.CallbackContext context);
        void OnLateralBrakes(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnDismount(InputAction.CallbackContext context);
    }
    public interface IFootActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAction(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
